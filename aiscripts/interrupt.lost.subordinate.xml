<?xml version="1.0" encoding="utf-8"?>
<aiscript name="interrupt.lost.subordinate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="100" priority="8">
  <interrupts>
    <library>
      <handler name="SubordinateLostHandler">
        <conditions>
          <event_object_destroyed group="@$subordinates" check="false"/>
          <check_value value="@this.assignedcontrolled.fleetunits.count"/>
          <check_value value="not @this.assignedcontrolled.commander"/>
          <check_value value="not @this.assignedcontrolled.fleetunit"/>
          <check_value value="player.gameversion ge 750"/>
        </conditions>
        <actions>
          <debug_text text="'[%s at %s, %s] - SubordinateLostHandler: requesting fleet replacements for %s units.'.
            [
              @this.ship.debugname,
              @this.ship.sector.knownname,
              @this.ship.fleet.name,
              @this.assignedcontrolled.fleetunits.count
            ]" chance="@$debugchance" />
          <!-- prepare group of subordinates to request fleet reinstate -->
          <include_interrupt_actions ref="SubordinatesRefresh"/>
          <signal_objects object="player.entity" param="'reconstitute_fleet'" param2="this.assignedcontrolled" param3="this.assignedcontrolled.fleetunits"/>
        </actions>
      </handler>
      <!-- assumes variables $subordinates (group) and $subordinatesToBeUpdatedAfter (integer) are defined in the script that uses this library
        if $subordinates is not exists, creates it
        if $subordinatesToBeUpdatedAfter is not exists, creates it
        returns updated list of subordinates in $subordinates and sets $subordinatesToBeUpdatedAfter to player.age + 60 -->
      <actions name="SubordinatesRefresh">
        <do_if value="@$subordinates" negate="true">
          <debug_text text="'[%s at %s, %s] - SubordinatesRefresh: creating $subordinates.'.
              [
                @this.ship.debugname,
                @this.ship.sector.knownname,
                @this.ship.fleet.name,
                @this.assignedcontrolled.fleetunits.count
              ]" chance="@$debugchance" />
          <create_group groupname="$subordinates" />
        </do_if>
        <do_if value="@$subordinatesToBeUpdatedAfter" negate="true">
          <debug_text text="'[%s at %s, %s] - SubordinatesRefresh: creating $subordinatesToBeUpdatedAfter.'.
              [
                @this.ship.debugname,
                @this.ship.sector.knownname,
                @this.ship.fleet.name
              ]" chance="@$debugchance" />
          <set_value name="$subordinatesToBeUpdatedAfter" exact="player.age - 1" />
        </do_if>
        <do_if value="player.gameversion ge 750 and $subordinatesToBeUpdatedAfter lt player.age">
          <debug_text text="'[%s at %s, %s] - SubordinatesRefresh: refreshing the $subordinates group.'.
            [
              @this.ship.debugname,
              @this.ship.sector.knownname,
              @this.ship.fleet.name
            ]" chance="@$debugchance" />
          <clear_group group="$subordinates" />
          <do_if value="not this.assignedcontrolled.commander">
            <add_to_group groupname="$subordinates" list="this.assignedcontrolled.allsubordinates"/>
            <do_for_each name="$subordinate" in="$subordinates" reverse="true">
              <do_if value="$subordinate.isunit or not $subordinate.subordinategroupid">
                <remove_from_group group="$subordinates" object="$subordinate"/>
              </do_if>
            </do_for_each>
            <set_value name="$subordinatesToBeUpdatedAfter" exact="player.age + 60" />
          </do_if>
        </do_if>
      </actions>
    </library>
  </interrupts>
</aiscript>